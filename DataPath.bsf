/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 2019  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/
(header "symbol" (version "1.2"))
(symbol
	(rect 16 16 344 368)
	(text "DataPath" (rect 5 0 60 19)(font "Intel Clear" (font_size 8)))
	(text "inst" (rect 8 331 24 348)(font "Intel Clear" ))
	(port
		(pt 0 32)
		(input)
		(text "InstructionReg[5..0]" (rect 0 0 114 19)(font "Intel Clear" (font_size 8)))
		(text "InstructionReg[5..0]" (rect 21 27 135 46)(font "Intel Clear" (font_size 8)))
		(line (pt 0 32)(pt 16 32)(line_width 3))
	)
	(port
		(pt 0 48)
		(input)
		(text "dataReg[5..0]" (rect 0 0 80 19)(font "Intel Clear" (font_size 8)))
		(text "dataReg[5..0]" (rect 21 43 101 62)(font "Intel Clear" (font_size 8)))
		(line (pt 0 48)(pt 16 48)(line_width 3))
	)
	(port
		(pt 0 64)
		(input)
		(text "writeInstructionReg[5..0]" (rect 0 0 143 19)(font "Intel Clear" (font_size 8)))
		(text "writeInstructionReg[5..0]" (rect 21 59 164 78)(font "Intel Clear" (font_size 8)))
		(line (pt 0 64)(pt 16 64)(line_width 3))
	)
	(port
		(pt 0 80)
		(input)
		(text "WriteDataReg[5..0]" (rect 0 0 113 19)(font "Intel Clear" (font_size 8)))
		(text "WriteDataReg[5..0]" (rect 21 75 134 94)(font "Intel Clear" (font_size 8)))
		(line (pt 0 80)(pt 16 80)(line_width 3))
	)
	(port
		(pt 0 96)
		(input)
		(text "WriteInstruction[31..0]" (rect 0 0 132 19)(font "Intel Clear" (font_size 8)))
		(text "WriteInstruction[31..0]" (rect 21 91 153 110)(font "Intel Clear" (font_size 8)))
		(line (pt 0 96)(pt 16 96)(line_width 3))
	)
	(port
		(pt 0 112)
		(input)
		(text "WriteData[31..0]" (rect 0 0 99 19)(font "Intel Clear" (font_size 8)))
		(text "WriteData[31..0]" (rect 21 107 120 126)(font "Intel Clear" (font_size 8)))
		(line (pt 0 112)(pt 16 112)(line_width 3))
	)
	(port
		(pt 0 128)
		(input)
		(text "WriteInstructionEnable" (rect 0 0 133 19)(font "Intel Clear" (font_size 8)))
		(text "WriteInstructionEnable" (rect 21 123 154 142)(font "Intel Clear" (font_size 8)))
		(line (pt 0 128)(pt 16 128))
	)
	(port
		(pt 0 144)
		(input)
		(text "WriteDataEnable" (rect 0 0 100 19)(font "Intel Clear" (font_size 8)))
		(text "WriteDataEnable" (rect 21 139 121 158)(font "Intel Clear" (font_size 8)))
		(line (pt 0 144)(pt 16 144))
	)
	(port
		(pt 0 160)
		(input)
		(text "ALUOp[1..0]" (rect 0 0 73 19)(font "Intel Clear" (font_size 8)))
		(text "ALUOp[1..0]" (rect 21 155 94 174)(font "Intel Clear" (font_size 8)))
		(line (pt 0 160)(pt 16 160)(line_width 3))
	)
	(port
		(pt 0 176)
		(input)
		(text "Branch" (rect 0 0 40 19)(font "Intel Clear" (font_size 8)))
		(text "Branch" (rect 21 171 61 190)(font "Intel Clear" (font_size 8)))
		(line (pt 0 176)(pt 16 176))
	)
	(port
		(pt 0 192)
		(input)
		(text "BranchEqual" (rect 0 0 73 19)(font "Intel Clear" (font_size 8)))
		(text "BranchEqual" (rect 21 187 94 206)(font "Intel Clear" (font_size 8)))
		(line (pt 0 192)(pt 16 192))
	)
	(port
		(pt 0 208)
		(input)
		(text "Jump" (rect 0 0 34 19)(font "Intel Clear" (font_size 8)))
		(text "Jump" (rect 21 203 55 222)(font "Intel Clear" (font_size 8)))
		(line (pt 0 208)(pt 16 208))
	)
	(port
		(pt 0 224)
		(input)
		(text "ALUSrc" (rect 0 0 43 19)(font "Intel Clear" (font_size 8)))
		(text "ALUSrc" (rect 21 219 64 238)(font "Intel Clear" (font_size 8)))
		(line (pt 0 224)(pt 16 224))
	)
	(port
		(pt 0 240)
		(input)
		(text "MemWrite" (rect 0 0 61 19)(font "Intel Clear" (font_size 8)))
		(text "MemWrite" (rect 21 235 82 254)(font "Intel Clear" (font_size 8)))
		(line (pt 0 240)(pt 16 240))
	)
	(port
		(pt 0 256)
		(input)
		(text "MemToReg" (rect 0 0 67 19)(font "Intel Clear" (font_size 8)))
		(text "MemToReg" (rect 21 251 88 270)(font "Intel Clear" (font_size 8)))
		(line (pt 0 256)(pt 16 256))
	)
	(port
		(pt 0 272)
		(input)
		(text "RegDst" (rect 0 0 42 19)(font "Intel Clear" (font_size 8)))
		(text "RegDst" (rect 21 267 63 286)(font "Intel Clear" (font_size 8)))
		(line (pt 0 272)(pt 16 272))
	)
	(port
		(pt 0 288)
		(input)
		(text "RegWrite" (rect 0 0 54 19)(font "Intel Clear" (font_size 8)))
		(text "RegWrite" (rect 21 283 75 302)(font "Intel Clear" (font_size 8)))
		(line (pt 0 288)(pt 16 288))
	)
	(port
		(pt 0 304)
		(input)
		(text "ProgramStart" (rect 0 0 80 19)(font "Intel Clear" (font_size 8)))
		(text "ProgramStart" (rect 21 299 101 318)(font "Intel Clear" (font_size 8)))
		(line (pt 0 304)(pt 16 304))
	)
	(port
		(pt 0 320)
		(input)
		(text "Clock" (rect 0 0 31 19)(font "Intel Clear" (font_size 8)))
		(text "Clock" (rect 21 315 52 334)(font "Intel Clear" (font_size 8)))
		(line (pt 0 320)(pt 16 320))
	)
	(port
		(pt 328 32)
		(output)
		(text "Op[5..0]" (rect 0 0 48 19)(font "Intel Clear" (font_size 8)))
		(text "Op[5..0]" (rect 259 27 307 46)(font "Intel Clear" (font_size 8)))
		(line (pt 328 32)(pt 312 32)(line_width 3))
	)
	(port
		(pt 328 48)
		(output)
		(text "ProgramCounter[5..0]" (rect 0 0 127 19)(font "Intel Clear" (font_size 8)))
		(text "ProgramCounter[5..0]" (rect 180 43 307 62)(font "Intel Clear" (font_size 8)))
		(line (pt 328 48)(pt 312 48)(line_width 3))
	)
	(port
		(pt 328 64)
		(output)
		(text "readInstruction[31..0]" (rect 0 0 127 19)(font "Intel Clear" (font_size 8)))
		(text "readInstruction[31..0]" (rect 180 59 307 78)(font "Intel Clear" (font_size 8)))
		(line (pt 328 64)(pt 312 64)(line_width 3))
	)
	(port
		(pt 328 80)
		(output)
		(text "readData[31..0]" (rect 0 0 94 19)(font "Intel Clear" (font_size 8)))
		(text "readData[31..0]" (rect 213 75 307 94)(font "Intel Clear" (font_size 8)))
		(line (pt 328 80)(pt 312 80)(line_width 3))
	)
	(port
		(pt 328 96)
		(output)
		(text "WriteDataRegFx[5..0]" (rect 0 0 126 19)(font "Intel Clear" (font_size 8)))
		(text "WriteDataRegFx[5..0]" (rect 181 91 307 110)(font "Intel Clear" (font_size 8)))
		(line (pt 328 96)(pt 312 96)(line_width 3))
	)
	(port
		(pt 328 112)
		(output)
		(text "WriteDataEnableFx" (rect 0 0 113 19)(font "Intel Clear" (font_size 8)))
		(text "WriteDataEnableFx" (rect 194 107 307 126)(font "Intel Clear" (font_size 8)))
		(line (pt 328 112)(pt 312 112))
	)
	(port
		(pt 328 128)
		(output)
		(text "ALUResult[31..0]" (rect 0 0 100 19)(font "Intel Clear" (font_size 8)))
		(text "ALUResult[31..0]" (rect 207 123 307 142)(font "Intel Clear" (font_size 8)))
		(line (pt 328 128)(pt 312 128)(line_width 3))
	)
	(port
		(pt 328 144)
		(output)
		(text "ReadReg1Fx[31..0]" (rect 0 0 113 19)(font "Intel Clear" (font_size 8)))
		(text "ReadReg1Fx[31..0]" (rect 194 139 307 158)(font "Intel Clear" (font_size 8)))
		(line (pt 328 144)(pt 312 144)(line_width 3))
	)
	(port
		(pt 328 160)
		(output)
		(text "ReadReg2Fx[31..0]" (rect 0 0 113 19)(font "Intel Clear" (font_size 8)))
		(text "ReadReg2Fx[31..0]" (rect 194 155 307 174)(font "Intel Clear" (font_size 8)))
		(line (pt 328 160)(pt 312 160)(line_width 3))
	)
	(port
		(pt 328 176)
		(output)
		(text "End" (rect 0 0 22 19)(font "Intel Clear" (font_size 8)))
		(text "End" (rect 285 171 307 190)(font "Intel Clear" (font_size 8)))
		(line (pt 328 176)(pt 312 176))
	)
	(drawing
		(rectangle (rect 16 16 312 336))
	)
)
