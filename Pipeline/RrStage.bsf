/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 2019  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/
(header "symbol" (version "1.2"))
(symbol
	(rect 16 16 312 368)
	(text "RrStage" (rect 5 0 52 19)(font "Intel Clear" (font_size 8)))
	(text "inst" (rect 8 331 24 348)(font "Intel Clear" ))
	(port
		(pt 0 32)
		(input)
		(text "Clock" (rect 0 0 31 19)(font "Intel Clear" (font_size 8)))
		(text "Clock" (rect 21 27 52 46)(font "Intel Clear" (font_size 8)))
		(line (pt 0 32)(pt 16 32))
	)
	(port
		(pt 0 48)
		(input)
		(text "IfEnable" (rect 0 0 48 19)(font "Intel Clear" (font_size 8)))
		(text "IfEnable" (rect 21 43 69 62)(font "Intel Clear" (font_size 8)))
		(line (pt 0 48)(pt 16 48))
	)
	(port
		(pt 0 64)
		(input)
		(text "IfALUOp[1..0]" (rect 0 0 81 19)(font "Intel Clear" (font_size 8)))
		(text "IfALUOp[1..0]" (rect 21 59 102 78)(font "Intel Clear" (font_size 8)))
		(line (pt 0 64)(pt 16 64)(line_width 3))
	)
	(port
		(pt 0 80)
		(input)
		(text "IfBranch" (rect 0 0 48 19)(font "Intel Clear" (font_size 8)))
		(text "IfBranch" (rect 21 75 69 94)(font "Intel Clear" (font_size 8)))
		(line (pt 0 80)(pt 16 80))
	)
	(port
		(pt 0 96)
		(input)
		(text "IfBranchEqual" (rect 0 0 81 19)(font "Intel Clear" (font_size 8)))
		(text "IfBranchEqual" (rect 21 91 102 110)(font "Intel Clear" (font_size 8)))
		(line (pt 0 96)(pt 16 96))
	)
	(port
		(pt 0 112)
		(input)
		(text "IfALUSrc" (rect 0 0 51 19)(font "Intel Clear" (font_size 8)))
		(text "IfALUSrc" (rect 21 107 72 126)(font "Intel Clear" (font_size 8)))
		(line (pt 0 112)(pt 16 112))
	)
	(port
		(pt 0 128)
		(input)
		(text "IfMemWrite" (rect 0 0 69 19)(font "Intel Clear" (font_size 8)))
		(text "IfMemWrite" (rect 21 123 90 142)(font "Intel Clear" (font_size 8)))
		(line (pt 0 128)(pt 16 128))
	)
	(port
		(pt 0 144)
		(input)
		(text "IfMemToReg" (rect 0 0 75 19)(font "Intel Clear" (font_size 8)))
		(text "IfMemToReg" (rect 21 139 96 158)(font "Intel Clear" (font_size 8)))
		(line (pt 0 144)(pt 16 144))
	)
	(port
		(pt 0 160)
		(input)
		(text "IfRegDs" (rect 0 0 46 19)(font "Intel Clear" (font_size 8)))
		(text "IfRegDs" (rect 21 155 67 174)(font "Intel Clear" (font_size 8)))
		(line (pt 0 160)(pt 16 160))
	)
	(port
		(pt 0 176)
		(input)
		(text "IfRegWrite" (rect 0 0 62 19)(font "Intel Clear" (font_size 8)))
		(text "IfRegWrite" (rect 21 171 83 190)(font "Intel Clear" (font_size 8)))
		(line (pt 0 176)(pt 16 176))
	)
	(port
		(pt 0 192)
		(input)
		(text "IfOp[5..0]" (rect 0 0 56 19)(font "Intel Clear" (font_size 8)))
		(text "IfOp[5..0]" (rect 21 187 77 206)(font "Intel Clear" (font_size 8)))
		(line (pt 0 192)(pt 16 192)(line_width 3))
	)
	(port
		(pt 0 208)
		(input)
		(text "Ifrs[4..0]" (rect 0 0 49 19)(font "Intel Clear" (font_size 8)))
		(text "Ifrs[4..0]" (rect 21 203 70 222)(font "Intel Clear" (font_size 8)))
		(line (pt 0 208)(pt 16 208)(line_width 3))
	)
	(port
		(pt 0 224)
		(input)
		(text "Ifrt[4..0]" (rect 0 0 48 19)(font "Intel Clear" (font_size 8)))
		(text "Ifrt[4..0]" (rect 21 219 69 238)(font "Intel Clear" (font_size 8)))
		(line (pt 0 224)(pt 16 224)(line_width 3))
	)
	(port
		(pt 0 240)
		(input)
		(text "Ifrd[4..0]" (rect 0 0 51 19)(font "Intel Clear" (font_size 8)))
		(text "Ifrd[4..0]" (rect 21 235 72 254)(font "Intel Clear" (font_size 8)))
		(line (pt 0 240)(pt 16 240)(line_width 3))
	)
	(port
		(pt 0 256)
		(input)
		(text "Ifshamt[4..0]" (rect 0 0 75 19)(font "Intel Clear" (font_size 8)))
		(text "Ifshamt[4..0]" (rect 21 251 96 270)(font "Intel Clear" (font_size 8)))
		(line (pt 0 256)(pt 16 256)(line_width 3))
	)
	(port
		(pt 0 272)
		(input)
		(text "IfFunct[5..0]" (rect 0 0 70 19)(font "Intel Clear" (font_size 8)))
		(text "IfFunct[5..0]" (rect 21 267 91 286)(font "Intel Clear" (font_size 8)))
		(line (pt 0 272)(pt 16 272)(line_width 3))
	)
	(port
		(pt 0 288)
		(input)
		(text "IfImm[15..0]" (rect 0 0 74 19)(font "Intel Clear" (font_size 8)))
		(text "IfImm[15..0]" (rect 21 283 95 302)(font "Intel Clear" (font_size 8)))
		(line (pt 0 288)(pt 16 288)(line_width 3))
	)
	(port
		(pt 0 304)
		(input)
		(text "RrReadData1[31..0]" (rect 0 0 119 19)(font "Intel Clear" (font_size 8)))
		(text "RrReadData1[31..0]" (rect 21 299 140 318)(font "Intel Clear" (font_size 8)))
		(line (pt 0 304)(pt 16 304)(line_width 3))
	)
	(port
		(pt 0 320)
		(input)
		(text "RrReadData2[31..0]" (rect 0 0 119 19)(font "Intel Clear" (font_size 8)))
		(text "RrReadData2[31..0]" (rect 21 315 140 334)(font "Intel Clear" (font_size 8)))
		(line (pt 0 320)(pt 16 320)(line_width 3))
	)
	(port
		(pt 296 32)
		(output)
		(text "RrEnable" (rect 0 0 53 19)(font "Intel Clear" (font_size 8)))
		(text "RrEnable" (rect 222 27 275 46)(font "Intel Clear" (font_size 8)))
		(line (pt 296 32)(pt 280 32))
	)
	(port
		(pt 296 48)
		(output)
		(text "RrALUOp[1..0]" (rect 0 0 86 19)(font "Intel Clear" (font_size 8)))
		(text "RrALUOp[1..0]" (rect 189 43 275 62)(font "Intel Clear" (font_size 8)))
		(line (pt 296 48)(pt 280 48)(line_width 3))
	)
	(port
		(pt 296 64)
		(output)
		(text "RrBranch" (rect 0 0 53 19)(font "Intel Clear" (font_size 8)))
		(text "RrBranch" (rect 222 59 275 78)(font "Intel Clear" (font_size 8)))
		(line (pt 296 64)(pt 280 64))
	)
	(port
		(pt 296 80)
		(output)
		(text "RrBranchEqual" (rect 0 0 86 19)(font "Intel Clear" (font_size 8)))
		(text "RrBranchEqual" (rect 189 75 275 94)(font "Intel Clear" (font_size 8)))
		(line (pt 296 80)(pt 280 80))
	)
	(port
		(pt 296 96)
		(output)
		(text "RrALUSrc" (rect 0 0 56 19)(font "Intel Clear" (font_size 8)))
		(text "RrALUSrc" (rect 219 91 275 110)(font "Intel Clear" (font_size 8)))
		(line (pt 296 96)(pt 280 96))
	)
	(port
		(pt 296 112)
		(output)
		(text "RrMemWrite" (rect 0 0 74 19)(font "Intel Clear" (font_size 8)))
		(text "RrMemWrite" (rect 201 107 275 126)(font "Intel Clear" (font_size 8)))
		(line (pt 296 112)(pt 280 112))
	)
	(port
		(pt 296 128)
		(output)
		(text "RrMemToReg" (rect 0 0 80 19)(font "Intel Clear" (font_size 8)))
		(text "RrMemToReg" (rect 195 123 275 142)(font "Intel Clear" (font_size 8)))
		(line (pt 296 128)(pt 280 128))
	)
	(port
		(pt 296 144)
		(output)
		(text "RrRegDst" (rect 0 0 55 19)(font "Intel Clear" (font_size 8)))
		(text "RrRegDst" (rect 220 139 275 158)(font "Intel Clear" (font_size 8)))
		(line (pt 296 144)(pt 280 144))
	)
	(port
		(pt 296 160)
		(output)
		(text "RrRegWrite" (rect 0 0 67 19)(font "Intel Clear" (font_size 8)))
		(text "RrRegWrite" (rect 208 155 275 174)(font "Intel Clear" (font_size 8)))
		(line (pt 296 160)(pt 280 160))
	)
	(port
		(pt 296 176)
		(output)
		(text "RrOp[5..0]" (rect 0 0 61 19)(font "Intel Clear" (font_size 8)))
		(text "RrOp[5..0]" (rect 214 171 275 190)(font "Intel Clear" (font_size 8)))
		(line (pt 296 176)(pt 280 176)(line_width 3))
	)
	(port
		(pt 296 192)
		(output)
		(text "RrRs[4..0]" (rect 0 0 57 19)(font "Intel Clear" (font_size 8)))
		(text "RrRs[4..0]" (rect 218 187 275 206)(font "Intel Clear" (font_size 8)))
		(line (pt 296 192)(pt 280 192)(line_width 3))
	)
	(port
		(pt 296 208)
		(output)
		(text "RrRt[4..0]" (rect 0 0 56 19)(font "Intel Clear" (font_size 8)))
		(text "RrRt[4..0]" (rect 219 203 275 222)(font "Intel Clear" (font_size 8)))
		(line (pt 296 208)(pt 280 208)(line_width 3))
	)
	(port
		(pt 296 224)
		(output)
		(text "RrRd[4..0]" (rect 0 0 60 19)(font "Intel Clear" (font_size 8)))
		(text "RrRd[4..0]" (rect 215 219 275 238)(font "Intel Clear" (font_size 8)))
		(line (pt 296 224)(pt 280 224)(line_width 3))
	)
	(port
		(pt 296 240)
		(output)
		(text "RrShamt[4..0]" (rect 0 0 82 19)(font "Intel Clear" (font_size 8)))
		(text "RrShamt[4..0]" (rect 193 235 275 254)(font "Intel Clear" (font_size 8)))
		(line (pt 296 240)(pt 280 240)(line_width 3))
	)
	(port
		(pt 296 256)
		(output)
		(text "RrFunct[5..0]" (rect 0 0 75 19)(font "Intel Clear" (font_size 8)))
		(text "RrFunct[5..0]" (rect 200 251 275 270)(font "Intel Clear" (font_size 8)))
		(line (pt 296 256)(pt 280 256)(line_width 3))
	)
	(port
		(pt 296 272)
		(output)
		(text "RrImm[15..0]" (rect 0 0 79 19)(font "Intel Clear" (font_size 8)))
		(text "RrImm[15..0]" (rect 196 267 275 286)(font "Intel Clear" (font_size 8)))
		(line (pt 296 272)(pt 280 272)(line_width 3))
	)
	(port
		(pt 296 288)
		(output)
		(text "ExReadData1[31..0]" (rect 0 0 119 19)(font "Intel Clear" (font_size 8)))
		(text "ExReadData1[31..0]" (rect 156 283 275 302)(font "Intel Clear" (font_size 8)))
		(line (pt 296 288)(pt 280 288)(line_width 3))
	)
	(port
		(pt 296 304)
		(output)
		(text "ExReadData2[31..0]" (rect 0 0 119 19)(font "Intel Clear" (font_size 8)))
		(text "ExReadData2[31..0]" (rect 156 299 275 318)(font "Intel Clear" (font_size 8)))
		(line (pt 296 304)(pt 280 304)(line_width 3))
	)
	(drawing
		(rectangle (rect 16 16 280 336))
	)
)
