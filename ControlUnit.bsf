/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 2019  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/
(header "symbol" (version "1.2"))
(symbol
	(rect 16 16 192 208)
	(text "ControlUnit" (rect 5 0 72 19)(font "Intel Clear" (font_size 8)))
	(text "inst" (rect 8 171 24 188)(font "Intel Clear" ))
	(port
		(pt 0 32)
		(input)
		(text "Op[5..0]" (rect 0 0 48 19)(font "Intel Clear" (font_size 8)))
		(text "Op[5..0]" (rect 21 27 69 46)(font "Intel Clear" (font_size 8)))
		(line (pt 0 32)(pt 16 32)(line_width 3))
	)
	(port
		(pt 176 32)
		(output)
		(text "ALUOp[1..0]" (rect 0 0 73 19)(font "Intel Clear" (font_size 8)))
		(text "ALUOp[1..0]" (rect 82 27 155 46)(font "Intel Clear" (font_size 8)))
		(line (pt 176 32)(pt 160 32)(line_width 3))
	)
	(port
		(pt 176 48)
		(output)
		(text "Branch" (rect 0 0 40 19)(font "Intel Clear" (font_size 8)))
		(text "Branch" (rect 115 43 155 62)(font "Intel Clear" (font_size 8)))
		(line (pt 176 48)(pt 160 48))
	)
	(port
		(pt 176 64)
		(output)
		(text "BranchEqual" (rect 0 0 73 19)(font "Intel Clear" (font_size 8)))
		(text "BranchEqual" (rect 82 59 155 78)(font "Intel Clear" (font_size 8)))
		(line (pt 176 64)(pt 160 64))
	)
	(port
		(pt 176 80)
		(output)
		(text "Jump" (rect 0 0 34 19)(font "Intel Clear" (font_size 8)))
		(text "Jump" (rect 121 75 155 94)(font "Intel Clear" (font_size 8)))
		(line (pt 176 80)(pt 160 80))
	)
	(port
		(pt 176 96)
		(output)
		(text "ALUSrc" (rect 0 0 43 19)(font "Intel Clear" (font_size 8)))
		(text "ALUSrc" (rect 112 91 155 110)(font "Intel Clear" (font_size 8)))
		(line (pt 176 96)(pt 160 96))
	)
	(port
		(pt 176 112)
		(output)
		(text "MemWrite" (rect 0 0 61 19)(font "Intel Clear" (font_size 8)))
		(text "MemWrite" (rect 94 107 155 126)(font "Intel Clear" (font_size 8)))
		(line (pt 176 112)(pt 160 112))
	)
	(port
		(pt 176 128)
		(output)
		(text "MemToReg" (rect 0 0 67 19)(font "Intel Clear" (font_size 8)))
		(text "MemToReg" (rect 88 123 155 142)(font "Intel Clear" (font_size 8)))
		(line (pt 176 128)(pt 160 128))
	)
	(port
		(pt 176 144)
		(output)
		(text "RegDst" (rect 0 0 42 19)(font "Intel Clear" (font_size 8)))
		(text "RegDst" (rect 113 139 155 158)(font "Intel Clear" (font_size 8)))
		(line (pt 176 144)(pt 160 144))
	)
	(port
		(pt 176 160)
		(output)
		(text "RegWrite" (rect 0 0 54 19)(font "Intel Clear" (font_size 8)))
		(text "RegWrite" (rect 101 155 155 174)(font "Intel Clear" (font_size 8)))
		(line (pt 176 160)(pt 160 160))
	)
	(drawing
		(rectangle (rect 16 16 160 176))
	)
)
