/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 2019  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 16 16 312 224)
	(text "Memory" (rect 5 0 40 12)(font "Arial" ))
	(text "inst" (rect 8 192 20 204)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "instructionReadReg[m-1..0]" (rect 0 0 108 12)(font "Arial" ))
		(text "instructionReadReg[m-1..0]" (rect 21 27 129 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 3))
	)
	(port
		(pt 0 48)
		(input)
		(text "dataReadReg[m-1..0]" (rect 0 0 86 12)(font "Arial" ))
		(text "dataReadReg[m-1..0]" (rect 21 43 107 55)(font "Arial" ))
		(line (pt 0 48)(pt 16 48)(line_width 3))
	)
	(port
		(pt 0 64)
		(input)
		(text "writeInstructionReg[m-1..0]" (rect 0 0 105 12)(font "Arial" ))
		(text "writeInstructionReg[m-1..0]" (rect 21 59 126 71)(font "Arial" ))
		(line (pt 0 64)(pt 16 64)(line_width 3))
	)
	(port
		(pt 0 80)
		(input)
		(text "writeDataReg[m-1..0]" (rect 0 0 83 12)(font "Arial" ))
		(text "writeDataReg[m-1..0]" (rect 21 75 104 87)(font "Arial" ))
		(line (pt 0 80)(pt 16 80)(line_width 3))
	)
	(port
		(pt 0 96)
		(input)
		(text "writeInstruction[n-1..0]" (rect 0 0 83 12)(font "Arial" ))
		(text "writeInstruction[n-1..0]" (rect 21 91 104 103)(font "Arial" ))
		(line (pt 0 96)(pt 16 96)(line_width 3))
	)
	(port
		(pt 0 112)
		(input)
		(text "writeData[n-1..0]" (rect 0 0 62 12)(font "Arial" ))
		(text "writeData[n-1..0]" (rect 21 107 83 119)(font "Arial" ))
		(line (pt 0 112)(pt 16 112)(line_width 3))
	)
	(port
		(pt 0 128)
		(input)
		(text "writeInstructionEnable" (rect 0 0 84 12)(font "Arial" ))
		(text "writeInstructionEnable" (rect 21 123 105 135)(font "Arial" ))
		(line (pt 0 128)(pt 16 128)(line_width 1))
	)
	(port
		(pt 0 144)
		(input)
		(text "writeDataEnable" (rect 0 0 63 12)(font "Arial" ))
		(text "writeDataEnable" (rect 21 139 84 151)(font "Arial" ))
		(line (pt 0 144)(pt 16 144)(line_width 1))
	)
	(port
		(pt 0 160)
		(input)
		(text "Clk" (rect 0 0 12 12)(font "Arial" ))
		(text "Clk" (rect 21 155 33 167)(font "Arial" ))
		(line (pt 0 160)(pt 16 160)(line_width 1))
	)
	(port
		(pt 296 32)
		(output)
		(text "readInstruction[n-1..0]" (rect 0 0 83 12)(font "Arial" ))
		(text "readInstruction[n-1..0]" (rect 192 27 275 39)(font "Arial" ))
		(line (pt 296 32)(pt 280 32)(line_width 3))
	)
	(port
		(pt 296 48)
		(output)
		(text "readData[n-1..0]" (rect 0 0 62 12)(font "Arial" ))
		(text "readData[n-1..0]" (rect 213 43 275 55)(font "Arial" ))
		(line (pt 296 48)(pt 280 48)(line_width 3))
	)
	(parameter
		"wordNumber"
		"64"
		""
		(type "PARAMETER_SIGNED_DEC")	)
	(parameter
		"n"
		"32"
		""
		(type "PARAMETER_SIGNED_DEC")	)
	(parameter
		"m"
		"6"
		""
		(type "PARAMETER_SIGNED_DEC")	)
	(drawing
		(rectangle (rect 16 16 280 192)(line_width 1))
	)
	(annotation_block (parameter)(rect 312 -64 412 16))
)
